//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UploadFile.BAL.UploadFileMyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadFileModel", Namespace="http://schemas.datacontract.org/2004/07/UploadFile.DAL.UploadFileModel")]
    [System.SerializableAttribute()]
    public partial class UploadFileModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBlankeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> IssueTrackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NumberOfChunckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream StreamFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream[] streamListFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBlanke {
            get {
                return this.FileBlankeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBlankeField, value) != true)) {
                    this.FileBlankeField = value;
                    this.RaisePropertyChanged("FileBlanke");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdFile {
            get {
                return this.IdFileField;
            }
            set {
                if ((this.IdFileField.Equals(value) != true)) {
                    this.IdFileField = value;
                    this.RaisePropertyChanged("IdFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IssueTracking {
            get {
                return this.IssueTrackingField;
            }
            set {
                if ((this.IssueTrackingField.Equals(value) != true)) {
                    this.IssueTrackingField = value;
                    this.RaisePropertyChanged("IssueTracking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameFile {
            get {
                return this.NameFileField;
            }
            set {
                if ((object.ReferenceEquals(this.NameFileField, value) != true)) {
                    this.NameFileField = value;
                    this.RaisePropertyChanged("NameFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NumberOfChunck {
            get {
                return this.NumberOfChunckField;
            }
            set {
                if ((this.NumberOfChunckField.Equals(value) != true)) {
                    this.NumberOfChunckField = value;
                    this.RaisePropertyChanged("NumberOfChunck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream StreamFile {
            get {
                return this.StreamFileField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamFileField, value) != true)) {
                    this.StreamFileField = value;
                    this.RaisePropertyChanged("StreamFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream[] streamListFile {
            get {
                return this.streamListFileField;
            }
            set {
                if ((object.ReferenceEquals(this.streamListFileField, value) != true)) {
                    this.streamListFileField = value;
                    this.RaisePropertyChanged("streamListFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UploadFileMyService.IUploadFileService")]
    public interface IUploadFileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadFileService/SaveFile", ReplyAction="http://tempuri.org/IUploadFileService/SaveFileResponse")]
        bool SaveFile(UploadFile.BAL.UploadFileMyService.UploadFileModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadFileService/SaveFile", ReplyAction="http://tempuri.org/IUploadFileService/SaveFileResponse")]
        System.Threading.Tasks.Task<bool> SaveFileAsync(UploadFile.BAL.UploadFileMyService.UploadFileModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadFileService/CollectStream", ReplyAction="http://tempuri.org/IUploadFileService/CollectStreamResponse")]
        bool CollectStream(System.IO.Stream model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadFileService/CollectStream", ReplyAction="http://tempuri.org/IUploadFileService/CollectStreamResponse")]
        System.Threading.Tasks.Task<bool> CollectStreamAsync(System.IO.Stream model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadFileService/SumChunk", ReplyAction="http://tempuri.org/IUploadFileService/SumChunkResponse")]
        bool SumChunk();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadFileService/SumChunk", ReplyAction="http://tempuri.org/IUploadFileService/SumChunkResponse")]
        System.Threading.Tasks.Task<bool> SumChunkAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUploadFileServiceChannel : UploadFile.BAL.UploadFileMyService.IUploadFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileServiceClient : System.ServiceModel.ClientBase<UploadFile.BAL.UploadFileMyService.IUploadFileService>, UploadFile.BAL.UploadFileMyService.IUploadFileService {
        
        public UploadFileServiceClient() {
        }
        
        public UploadFileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UploadFileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadFileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadFileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SaveFile(UploadFile.BAL.UploadFileMyService.UploadFileModel model) {
            return base.Channel.SaveFile(model);
        }
        
        public System.Threading.Tasks.Task<bool> SaveFileAsync(UploadFile.BAL.UploadFileMyService.UploadFileModel model) {
            return base.Channel.SaveFileAsync(model);
        }
        
        public bool CollectStream(System.IO.Stream model) {
            return base.Channel.CollectStream(model);
        }
        
        public System.Threading.Tasks.Task<bool> CollectStreamAsync(System.IO.Stream model) {
            return base.Channel.CollectStreamAsync(model);
        }
        
        public bool SumChunk() {
            return base.Channel.SumChunk();
        }
        
        public System.Threading.Tasks.Task<bool> SumChunkAsync() {
            return base.Channel.SumChunkAsync();
        }
    }
}
